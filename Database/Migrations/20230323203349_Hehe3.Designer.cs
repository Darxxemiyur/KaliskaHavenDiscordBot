// <auto-generated />
using System;
using KaliskaHaven.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KaliskaHaven.Database.Migrations
{
    [DbContext(typeof(KaliskaDB))]
    [Migration("20230323203349_Hehe3")]
    partial class Hehe3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("discordbottie")
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KaliskaHaven.Database.Economy.DbCurrency", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<int>("CurrencyType")
                        .HasColumnType("integer");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.Property<long?>("WalletID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("WalletID");

                    b.ToTable("DbCurrencies", "discordbottie");
                });

            modelBuilder.Entity("KaliskaHaven.Database.Economy.TransactionRecord", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long?>("DepositedID")
                        .HasColumnType("bigint");

                    b.Property<long?>("FromID")
                        .HasColumnType("bigint");

                    b.Property<int>("Kind")
                        .HasColumnType("integer");

                    b.Property<long?>("ToID")
                        .HasColumnType("bigint");

                    b.Property<long?>("WithdrawnID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DepositedID");

                    b.HasIndex("FromID");

                    b.HasIndex("ToID");

                    b.HasIndex("WithdrawnID");

                    b.ToTable("TransactionRecords", "discordbottie");
                });

            modelBuilder.Entity("KaliskaHaven.Database.Economy.Wallet", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long?>("OwnerID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("OwnerID")
                        .IsUnique();

                    b.ToTable("Wallets", "discordbottie");
                });

            modelBuilder.Entity("KaliskaHaven.Database.Entities.Person", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<decimal>("DiscordId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("ID");

                    b.ToTable("Persons", "discordbottie");
                });

            modelBuilder.Entity("KaliskaHaven.Database.Shop.ShopItem", b =>
                {
                    b.Property<decimal>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("ID");

                    b.ToTable("ShopItems", "discordbottie");
                });

            modelBuilder.Entity("KaliskaHaven.Database.Economy.DbCurrency", b =>
                {
                    b.HasOne("KaliskaHaven.Database.Economy.Wallet", null)
                        .WithMany("DbCurrencies")
                        .HasForeignKey("WalletID");
                });

            modelBuilder.Entity("KaliskaHaven.Database.Economy.TransactionRecord", b =>
                {
                    b.HasOne("KaliskaHaven.Database.Economy.DbCurrency", "Deposited")
                        .WithMany()
                        .HasForeignKey("DepositedID");

                    b.HasOne("KaliskaHaven.Database.Economy.Wallet", "From")
                        .WithMany()
                        .HasForeignKey("FromID");

                    b.HasOne("KaliskaHaven.Database.Economy.Wallet", "To")
                        .WithMany()
                        .HasForeignKey("ToID");

                    b.HasOne("KaliskaHaven.Database.Economy.DbCurrency", "Withdrawn")
                        .WithMany()
                        .HasForeignKey("WithdrawnID");

                    b.Navigation("Deposited");

                    b.Navigation("From");

                    b.Navigation("To");

                    b.Navigation("Withdrawn");
                });

            modelBuilder.Entity("KaliskaHaven.Database.Economy.Wallet", b =>
                {
                    b.HasOne("KaliskaHaven.Database.Entities.Person", "Owner")
                        .WithOne("Wallet")
                        .HasForeignKey("KaliskaHaven.Database.Economy.Wallet", "OwnerID");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("KaliskaHaven.Database.Economy.Wallet", b =>
                {
                    b.Navigation("DbCurrencies");
                });

            modelBuilder.Entity("KaliskaHaven.Database.Entities.Person", b =>
                {
                    b.Navigation("Wallet");
                });
#pragma warning restore 612, 618
        }
    }
}
